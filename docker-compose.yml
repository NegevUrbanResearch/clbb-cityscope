services:
  web:
    container_name: core_api
    build: ./clbb-io/core/.
    ports:
      - "${API_PORT}:9900"  # Uses the API_PORT variable from the .env file
    env_file:
      - .env  # Declares the .env file here
    volumes:
      - ./clbb-io/core/.:/app
      - ./init.sh:/app/init.sh:ro
      - core_api_data:/app/data
    depends_on:
      - db
    command: ["sh", "-c", "chmod +x /app/init.sh && /app/init.sh"]
    networks:
      - clbb_core

  dashboard-builder:
    container_name: dashboard_builder
    build:
      context: ./clbb-front/frontend
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - dashboard_build:/app/build  # Mounts the volume to share the build
    command: ["npm", "run", "build"]  # Runs the build command and exits
    networks:
      - clbb_core

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-front   
    env_file:
      - .env 
    volumes:
      - ./clbb-projection/frontend:/usr/share/nginx/html/clbb-projection/frontend
      - ./clbb-remote-controller/frontend:/usr/share/nginx/html/clbb-remote-controller/frontend
      - dashboard_build:/usr/share/nginx/html/clbb-front/frontend
    ports:
      - "${FRONT_PORT}:80"
    depends_on:
      - web
      - dashboard-builder
    networks:
      - clbb_core

  db:
    container_name: core_db
    image: postgres:latest
    env_file:
      - .env
    volumes:
      - postgres_data_core:/var/lib/postgresql/data
    networks:
      - clbb_core

  redis:
    image: redis:alpine
    container_name: redis-cs
    # ports:
    #   - "6379:6379"
    restart: always
    networks:
      - clbb_core

networks:
  clbb_core:
    name: clbb_core        # So that the network has this EXACT name
    driver: bridge

volumes:
  postgres_data_core:
  dashboard_build:
  core_api_data:          # New volume for persistent core_api data
