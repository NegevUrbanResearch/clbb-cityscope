
services:
  web:
    container_name: core_api
    build: ./clbb-io/core/.
    ports:
      - "${API_PORT}:9900"  # Usa la variable API_PORT desde el archivo .env
    env_file:
      - .env  # Declara el archivo .env aqu√≠
    volumes:
      - ./clbb-io/core/.:/app
    depends_on:
      - db
    networks:
      - clbb_core

  # dashboard-builder:
  #   container_name: dashboard_builder
  #   build:
  #     context: ./clbb-front/frontend
  #     dockerfile: Dockerfile
  #   env_file:
  #     - .env
  #   volumes:
  #     - dashboard_build:/app/build  # Monta el volumen para compartir el build
  #   command: ["npm", "run", "build"]  # Ejecuta el comando de build y sale
  #   networks:
  #     - clbb_core

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-front   
    env_file:
      - .env 
    volumes:
      - ./clbb-projection/frontend:/usr/share/nginx/html/clbb-projection/frontend
      - ./clbb-remote-controller/frontend:/usr/share/nginx/html/clbb-remote-controller/frontend
      # - dashboard_build:/usr/share/nginx/html/clbb-front/frontend
    ports:
      - "${FRONT_PORT}:80"
    depends_on:
      - web
      # - dashboard-builder
    networks:
      - clbb_core

  db:
    container_name: core_db
    image: postgres:latest
    env_file:
      - .env
    volumes:
      - postgres_data_core:/var/lib/postgresql/data
    networks:
      - clbb_core

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    networks:
      - clbb_core

networks:
  clbb_core:
    name: clbb_core        # Para que la red tenga este nombre EXACTO
    driver: bridge

volumes:
  postgres_data_core:
  # dashboard_build:
